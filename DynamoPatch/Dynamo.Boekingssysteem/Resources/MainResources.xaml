<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dyn="clr-namespace:Dynamo.Boekingssysteem.Controls"
                    xmlns:sdk="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    
                    >
    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    
    
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="{DynamicResource KleurAchtergrondVelden}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
                        Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <Label 
              FontSize="15"
                            Margin="-15,2,2,2"
              FontWeight="Bold"
              Foreground="{DynamicResource KleurTekstVelden}"
              HorizontalContentAlignment="Center"  
              Content="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="HoofdBalk" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
                        Background="{DynamicResource KleurAchtergrondVelden}" 
                        BorderBrush="LightGray" 
                        BorderThickness="1" 
                        CornerRadius="5" 
                        Margin="4" 
                        Padding="4" 
                        SnapsToDevicePixels="True" 
                        >
                        <StackPanel Orientation="Horizontal">
                            <Label 
                              Width="Auto"
                              FontSize="14"
                              HorizontalAlignment="Center"  
                              Foreground="{DynamicResource KleurTekstVelden}"
                              Content="Aangemeld: " 
                              />
                            <Label 
                              FontSize="14"
                              FontWeight="Bold"
                              HorizontalAlignment="Center"  
                              Foreground="{DynamicResource KleurTekstVelden}"
                              Content="{TemplateBinding Content}" 
                              />
                        </StackPanel>
                        
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Control}" x:Key="baseStyle" >
        <Setter Property="FontSize" Value="14" />
    </Style>
    
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
    </Style>
    <Style TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{DynamicResource Brush_HeaderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekst}" />
    </Style>
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
    </Style>
    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
    </Style>
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>


    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3 2">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShadowStyle">
        <Setter Property="Control.Foreground" Value="LightGray" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurKnoppen}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstKnoppen}" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
				BorderThickness="1"
				Padding="4,2" 
				BorderBrush="DarkGray" 
				CornerRadius="3" 
				Background="{TemplateBinding Background}">
                        
                        <Grid >
                            <ContentPresenter HorizontalAlignment="Center"
	                           VerticalAlignment="Center" Name="contentShadow" 
					Style="{StaticResource ShadowStyle}">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="1.0" Y="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" 
                            VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource KleurSelecteren}" />
                            <Setter Property="Foreground" Value="{DynamicResource KleurSelecteren}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource KleurSelecteren}" >
                                
                            </Setter>
                            <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}"></Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource KleurSelecteren}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource KleurSelecteren}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2"/>
                            <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="180" />
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}"/>
        <Setter Property="Foreground" Value="{DynamicResource KleurVelden}"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource KleurTekst}" />
        <Setter Property="Height" Value="Auto" />
    <Setter Property="Margin" Value="2" />
        <Setter Property="Width" Value="180" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
    </Style>


    <Style TargetType="{x:Type sdk:AutoCompleteBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="{x:Type dyn:AutoCompleteFocusableBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="2" />
    </Style>
    
    <Style TargetType="TextBox" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style TargetType="{x:Type dyn:DecimalTextBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style TargetType="{x:Type dyn:IntegerTextBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="Foreground" Value="{DynamicResource KleurTekstVelden}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style TargetType="ContentControl">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrond}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="AlternationCount" Value="1" />
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource KleurAchtergrondVelden}" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="FontSize" Value="14"/>
        
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource KleurVoorgrondVelden}"/>
        
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0" />
    </Style>
    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="AmountColumn">
        <TextBlock TextAlignment="Right" />
    </DataTemplate>

    
    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Background="{DynamicResource KleurSpecialeKnoppen}"  Command="{Binding Path=Command}" >
                        <TextBlock Foreground="{DynamicResource KleurTekstVelden}" Text="{Binding Path=DisplayName}"  FontSize="17"/>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Background="{DynamicResource KleurAchtergrond}" Width="120">
            <Button 
                Command="{Binding Path=CloseCommand}"
                Content="X"
                Cursor="Hand"
                DockPanel.Dock="Right"
                Focusable="False"
                FontFamily="Courier" 
                FontSize="9"
                FontWeight="Bold"  
                Margin="0,1,0,0"
                Padding="0"
                MinWidth="16"                
                VerticalContentAlignment="Bottom"
                Width="16" Height="16" 
                />
            <TextBlock
                Margin="2"
                Foreground="{DynamicResource KleurTekst}"
                Text="{Binding Path=DisplayName}" 
                
                VerticalAlignment="Center" 
                />
            
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
            IsSynchronizedWithCurrentItem="True" 
            ItemsSource="{Binding}" 
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
            Margin="2"
                            
        />
    </DataTemplate>

</ResourceDictionary>